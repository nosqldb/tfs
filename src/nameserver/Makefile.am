#AM_CPPFLAGS=-fprofile-arcs -ftest-coverage -Wall -I$(top_srcdir)/src
AM_CPPFLAGS=-I$(top_srcdir)/src\
            -I$(TBLIB_ROOT)/include/tbsys\
            -I$(TBLIB_ROOT)/include/tbnet\
						-I$(EASY_ROOT)/include/easy\
	    			$(TAIR_STORE_CPPFLAGS)

AM_LDFLAGS=-lz -lrt -lpthread -ldl -rdynamic -lssl -lcrypto  $(TAIR_STORE_LDFLAGS) ${TCMALLOC_LDFLAGS}

LDADD=$(top_builddir)/src/message/libtfsmessage.a \
      $(top_builddir)/src/common/libtfscommon.a\
      $(TBLIB_ROOT)/lib/libtbnet.a \
      $(TBLIB_ROOT)/lib/libtbsys.a \
			$(EASY_ROOT)/lib64/libeasy.a

noinst_LIBRARIES=libnameserver.a

NAMESERVER_SOURCE_LIST_HEADER=block_collect.h block_id_factory.h block_manager.h client_request_server.h\
global_factory.h heart_manager.h layout_manager.h nameserver.h ns_define.h\
oplog.h oplog_sync_manager.h server_collect.h server_manager.h task.h task_manager.h\
family_collect.h family_manager.h tair_helper.h


NAMSERVER_SOURCE_LIST=ns_define.cpp block_collect.cpp block_manager.cpp  server_collect.cpp server_manager.cpp\
	task.cpp task_manager.cpp family_collect.cpp family_manager.cpp block_id_factory.cpp global_factory.cpp \
	oplog.cpp oplog_sync_manager.cpp heart_manager.cpp  layout_manager.cpp client_request_server.cpp\
	tair_helper.cpp  nameserver.cpp $(NAMESERVER_SOURCE_LIST_HEADER)

libnameserver_a_SOURCES=$(NAMSERVER_SOURCE_LIST)
libnameserver_a_LIBFLAGS=$(AM_LDFLAGS)

bin_PROGRAMS = nameserver

nameserver_SOURCES=$(NAMSERVER_SOURCE_LIST) service.cpp

